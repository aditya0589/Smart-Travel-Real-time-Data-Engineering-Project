version: '3.8'

# Spark Common Configuration (dependency to spark-master and added host environment)
x-spark-common: &spark-common
  image: bitnamilegacy/spark:latest
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  depends_on:
    - spark-master  
  environment:
    SPARK_MODE: Worker
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 1g
    SPARK_MASTER_URL: spark://spark-master:7077 
  networks:
    - adityaynetworks

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "true"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - adityaynetworks

  broker:
    image: confluentinc/cp-server:7.4.0
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      
      # === KAFKA NETWORK CONFIG ===
      KAFKA_LISTENERS: INTERNAL://broker:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092 # FIX: Advertise localhost for host connection
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # === END KAFKA NETWORK CONFIG ===
      
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - adityaynetworks

  # SPARK MASTER 
  spark-master: 
    image: bitnamilegacy/spark:latest
    container_name: spark-master
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080" # Spark UI
      - "7077:7077" # Master RPC
    environment:
      SPARK_MASTER_HOST: spark-master 
    networks:
      - adityaynetworks

  # SPARK WORKER
  spark-worker-1:
    <<: *spark-common
    container_name: spark-worker-1
    environment:
      # Inherited environment variables
      SPARK_MODE: Worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_HOST: spark-worker-1 
      SPARK_WORKER_PORT: 7078
    
  spark-worker-2:
    <<: *spark-common
    container_name: spark-worker-2
    environment:
      # Inherited environment variables
      SPARK_MODE: Worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_HOST: spark-worker-2
      SPARK_WORKER_PORT: 7079

networks:
  adityaynetworks: